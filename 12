#include<stdio.h>
#define MAX 10
void display(int a[MAX])
{
int i,ch;
do
{
printf("1.display all\n 2.filtered Display\n");
printf("enter choice");
scanf("%d",&ch);
switch(ch)
{
case 1:printf("\n the hash table is\n");
for(i=0;i<MAX;i++)
printf("\n%d\t%d ",i,a[i]);

break;
case 2:
printf("enter the value to filter");

for(i=0;i<MAX;i++)
{
      if(a[i]!=-1)
      printf("\n%d\t%d",i,a[i]);
      continue;
}
break;
default:
printf("invalid choice");
}
}while(ch<=2);

}
int create(int num)
{
int key;
key=num%10;
return key;

}
void linearprobe(int a[MAX],int key,int num)
{
int i,c=0,flag=0;
if(a[key]==-1)
a[key]=num;
else
{
printf("\n collision detected\n");
for(i=0;i<MAX;i++)
{
      if(a[i]!=-1)
      c++;
}



if(c==MAX)
{
printf("hash table is full\n");
return;
}
printf("collision avoided successfully using linear probing\n");
for(i=key+1;i<MAX;i++)
if(a[i]==-1)
{
a[i]=num;
flag=1;
break;
}
i=0;
while(i<key && flag==0)
{
if(a[i]==-1)
{
a[i]=num;
flag=1;
break;
}
i++;
}
}
}
void main()
{
int a[MAX],num,key,i;
int ch;
printf("collision handling by linear probing\n");
for(i=0;i<MAX;i++)
a[i]=-1;
do
{
printf("\n enter the value\n");
scanf("%d",&num);
key=create(num);
linearprobe(a,key,num);
printf("\n do you wish to continue?(1/0)");
scanf("%d",&ch);
}while(ch);
display(a);
}
