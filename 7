 #include<stdio.h>
 #include<malloc.h>
 typedef struct node
 {
 char usn[11];
 char name[20];
 char sem[10];
 char branch[10];
 char phno[10];
 struct node *link;
 }NODE;
 NODE*first=NULL;
 void create()
 {
 int i,n;
 NODE*nn;
 printf("\nenter value of n \n");
 scanf("%d",&n);
 for(i=1;i<=n;i++)
 {
 nn=(NODE*)malloc(sizeof(NODE));
 printf("Enter Details");
 printf("\nenter usn: name: branch: sem: phno");
 scanf("%s%s%s%s%s",nn->usn,nn->name,nn->branch,nn->sem,nn->phno);
 nn->link=first;
 first=nn;
 }
 }
 void insert_front()
 {
NODE*nn;
 nn=(NODE*)malloc(sizeof(NODE));
 printf("\nEnter Details");
 printf("\nenter usn: name: branch: sem: phno\n");
 scanf("%s%s%s%s%s",nn->usn,nn->name,nn->branch,nn->sem,nn->phno);
 nn->link=first;
 first=nn;
 }
 void delete_front()
 {
 NODE*temp;
 if(first==NULL)
 {
 printf("\nlist is empty");
 return;
 }
 if(first->rlink= =NULL)
 {
 temp=first;
 first=NULL;
 free(temp);
 return;
 }
 temp=first;
 first=first->link;
 free(temp);
 }
 void display()
 {
 int c=0;
 NODE*temp;
 if(first= =NULL)
 {
 printf("\n list is empty");
 return;
 }
 temp=first;
 printf("\ncontents are: \n");
 while(temp!=NULL)
{
 printf("%s\t%s\t%s\t%s\t%s\t\n",temp->usn,temp->name,temp->branch,temp->se
 m,temp->phno);
 temp=temp->link;
 c++;
 }
 printf(" no. of nodes=%d",c);
 }
 void main()
 {
 int ch;
 do
 {
 printf("\n1.create 2.insert front 3.delete front 4:display\n");
 printf("enter your choice\n");
 scanf("%d",&ch);
 switch(ch)
 {
 case 1:create();
 break;
 case 2:insert_front ();
 break;
 case 3:delete_front();
 break;
 case 4 : display();
 break;
 default: printf("\ninvalid choice\n");
 }
 }while(ch<=4);
 }
